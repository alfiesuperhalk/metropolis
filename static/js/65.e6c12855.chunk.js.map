{"version":3,"sources":["assets/images/big/auth-bg.jpg","views/authentication/Validators.js","firebase/Firebase.js","firebase/Auth.js","firebase/Db.js","views/authentication/Register2.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["module","exports","Validator","email","rules","test","message","errors","valid","state","password","value","length","username","firebase","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Db","database","Auth","auth","doCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doCreateUser","id","ref","set","onceGetUsers","once","sidebarBackground","backgroundImage","img2","backgroundRepeat","backgroundPosition","Register2","props","useState","setEmail","setPassword","setUsername","onInputChange","e","formValidators","target","name","fieldName","validators","forEach","rule","RegExp","push","showErrors","validator","map","info","index","className","key","style","md","lg","action","for","type","onChange","placeholder","bsSize","label","xs","onClick","event","email1","password1","username1","then","authUser","user","uid","history","catch","error","alert","preventDefault","doRegister","status","Object","keys","field","isFormValid","color","size","block","href","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/65.e6c12855.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/auth-bg.5d0f0ddd.jpg\";","const Validator = {\r\n\r\n  email: {\r\n    rules: [\r\n      {\r\n        test: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,})$/i,\r\n        message: 'Please Enter Valid Email',\r\n      },\r\n    ],\r\n    errors: [],\r\n    valid: false,\r\n    state: '',\r\n  },\r\n  password: {\r\n    rules: [\r\n      {\r\n        test: (value) => {\r\n          return value.length >= 6;\r\n        },\r\n        message: 'Password can not be < 6 characters',\r\n      },\r\n      {\r\n        test: /^[a-z0-9A-Z_]+$/,\r\n        message: 'Enter Valid Password',\r\n      },\r\n    ],\r\n    errors: [],\r\n    valid: false,\r\n    state: ''\r\n  },\r\n  username: {\r\n    rules: [\r\n      {\r\n        test: /^[a-zA-Z_]+$/i,\r\n        message: 'number not allowed',\r\n      },\r\n    ],\r\n    errors: [],\r\n    valid: false,\r\n    state: '',\r\n  },\r\n};\r\n\r\nexport default Validator;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyD80dV2anOhJL_W1SKSq_rcRx50H0tonyg\",\r\n  authDomain: \"xtreme-react-admin.firebaseapp.com\",\r\n  databaseURL: \"https://xtreme-react-admin.firebaseio.com\",\r\n  projectId: \"xtreme-react-admin\",\r\n  storageBucket: \"xtreme-react-admin.appspot.com\",\r\n  messagingSenderId: \"452884069288\",\r\n};\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n}\r\nconst Db = firebase.database();\r\nconst Auth = firebase.auth();\r\n\r\nexport { Db, Auth };\r\n","import { Auth } from \"./Firebase\";\r\n// Sign Up\r\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\r\n  Auth.createUserWithEmailAndPassword(email, password);\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = (email, password) =>\r\n  Auth.signInWithEmailAndPassword(email, password);\r\n\r\n// Sign out\r\nexport const doSignOut = () => Auth.signOut();\r\n// Password Reset\r\nexport const doPasswordReset = (email) => Auth.sendPasswordResetEmail(email);\r\n\r\n// Password Change\r\nexport const doPasswordUpdate = (password) =>\r\n  Auth.currentUser.updatePassword(password);\r\n","import { Db } from \"./Firebase\";\r\n\r\n// User API\r\n\r\nexport const doCreateUser = (id, username, email) =>\r\n  Db.ref(`users/${id}`).set({\r\n    username,\r\n    email,\r\n  });\r\n\r\nexport const onceGetUsers = () => Db.ref(\"users\").once(\"value\");\r\n","import React, { useState } from \"react\";\r\nimport { Auth, Db } from \"../../firebase\";\r\nimport validators from \"./Validators\";\r\nimport {\r\n  Input,\r\n  CustomInput,\r\n  FormGroup,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport img2 from \"../../assets/images/big/auth-bg.jpg\";\r\n\r\nconst sidebarBackground = {\r\n  backgroundImage: \"url(\" + img2 + \")\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundPosition: \"center center\",\r\n};\r\n\r\nconst Register2 = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const onInputChange = (e) => {\r\n    formValidators([e.target.name], e.target.value);\r\n  };\r\n\r\n  const formValidators = (fieldName, value) => {\r\n    validators[fieldName].errors = [];\r\n    validators[fieldName].state = value;\r\n    validators[fieldName].valid = true;\r\n    validators[fieldName].rules.forEach((rule) => {\r\n      if (rule.test instanceof RegExp) {\r\n        if (!rule.test.test(value)) {\r\n          validators[fieldName].errors.push(rule.message);\r\n          validators[fieldName].valid = false;\r\n        }\r\n      } else if (typeof rule.test === \"function\") {\r\n        if (!rule.test(value)) {\r\n          validators[fieldName].errors.push(rule.message);\r\n          validators[fieldName].valid = false;\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    let status = true;\r\n    Object.keys(validators).forEach((field) => {\r\n      if (!validators[field].valid) {\r\n        status = false;\r\n      }\r\n    });\r\n    return status;\r\n  };\r\n\r\n  const showErrors = (fieldName) => {\r\n    const validator = validators[fieldName];\r\n    const result = \"\";\r\n    if (validator && !validator.valid) {\r\n      const errors = validator.errors.map((info, index) => {\r\n        return (\r\n          <span className=\"error\" key={index}>\r\n            * {info}\r\n            <br />\r\n          </span>\r\n        );\r\n      });\r\n\r\n      return <div className=\"error mb-2\">{errors}</div>;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const doRegister = (event) => {\r\n    const email1 = email;\r\n    const password1 = password;\r\n    const username1 = username;\r\n    Auth.doCreateUserWithEmailAndPassword(email1, password1)\r\n      .then((authUser) => {\r\n        Db.doCreateUser(authUser.user.uid, username1, email1)\r\n          .then(() => {\r\n            setEmail(email1);\r\n            setPassword(password1);\r\n            setUsername(username1);\r\n            props.history.push(\"/authentication/login2\");\r\n          })\r\n          .catch((error) => {\r\n            alert(\"Something went wrong!\");\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Something went wrong!\");\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <div\r\n      className=\"auth-wrapper  align-items-center d-flex\"\r\n      style={sidebarBackground}\r\n    >\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/*Login2 Cards*/}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <div className=\"container\">\r\n        <div>\r\n          <Row className=\"no-gutters justify-content-center\">\r\n            <Col md=\"6\" lg=\"4\" className=\"bg-dark text-white\">\r\n              <div className=\"p-4\">\r\n                <h2 className=\"display-5\">\r\n                  Hi,\r\n                  <br /> <span className=\"text-cyan font-bold\">Dude</span>\r\n                </h2>\r\n                <p className=\"op-5 mt-4\">\r\n                  This is the Firebase sign-up section. Donec non pharetra\r\n                  ligula, sit amet laoreet arcu.Integer. you can use below\r\n                  username password for login\r\n                </p>\r\n                <p className=\"mt-5\">Username: demo@demo.com</p>\r\n                <p className=\"align-items-end\">Password: demo123</p>\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\" lg=\"4\" className=\"bg-white\">\r\n              <div className=\"p-4\">\r\n                <h3 className=\"font-medium mb-3\">Sign Up to Admin</h3>\r\n                <Form className=\"mt-3\" id=\"loginform\" action=\"/dashbaord\">\r\n                  <FormGroup className=\"mb-3\">\r\n                    <Label for=\"username\" className=\"font-medium\">\r\n                      Username\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      value={username}\r\n                      onChange={(e) => {\r\n                        setUsername(e.target.value);\r\n                        onInputChange(e);\r\n                      }}\r\n                      name=\"username\"\r\n                      id=\"username\"\r\n                      placeholder=\"Name\"\r\n                      bsSize=\"lg\"\r\n                    />\r\n                  </FormGroup>\r\n                  {showErrors(\"username\")}\r\n                  <FormGroup className=\"mb-3\">\r\n                    <Label for=\"email\" className=\"font-medium\">\r\n                      Email\r\n                    </Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      value={email}\r\n                      onChange={(e) => {\r\n                        setEmail(e.target.value);\r\n                        onInputChange(e);\r\n                      }}\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"Email\"\r\n                      bsSize=\"lg\"\r\n                    />\r\n                  </FormGroup>\r\n                  {showErrors(\"email\")}\r\n                  <FormGroup className=\"mb-3\">\r\n                    <Label for=\"password\" className=\"font-medium\">\r\n                      Password\r\n                    </Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      value={password}\r\n                      onChange={(e) => {\r\n                        setPassword(e.target.value);\r\n                        onInputChange(e);\r\n                      }}\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"Password\"\r\n                      bsSize=\"lg\"\r\n                    />\r\n                  </FormGroup>\r\n                  {showErrors(\"password\")}\r\n                  <CustomInput\r\n                    type=\"checkbox\"\r\n                    id=\"exampleCustomCheckbox\"\r\n                    label=\"I agree to all Terms\"\r\n                  />\r\n                  <Row className=\"mb-3 mt-3\">\r\n                    <Col xs=\"12\">\r\n                      <Button\r\n                        onClick={(event) => doRegister(event)}\r\n                        className={`text-uppercase ${\r\n                          isFormValid() ? \"\" : \"disabled\"\r\n                        }`}\r\n                        color=\"primary\"\r\n                        size=\"lg\"\r\n                        type=\"submit\"\r\n                        block\r\n                      >\r\n                        Sign Up\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"text-center\">\r\n                    Already have an account?{\" \"}\r\n                    <a href=\"/authentication/login2\" className=\"text-info ml-1\">\r\n                      <b>Sign In</b>\r\n                    </a>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register2;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}